name: Jekyll site CI

on: 
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

#    - name: Cache jekyll vendor
#      uses: actions/cache@v4
#      with:
#        path: ./vendor
#        key: ${{ runner.os }}-build-${{ hashFiles('Gemfile') }}
#        restore-keys: |
#          ${{ runner.os }}-build-${{ hashFiles('Gemfile') }}
#          ${{ runner.os }}-build-
#          ${{ runner.os }}-
#    - name: Build the site in the jekyll/builder container
#      run: |
#        docker run \
#            -v ${PWD}:/srv/jekyll \
#            -v ${PWD}/vendor/bundle:/usr/local/bundle \
#            jekyll/builder:4 \
#            /bin/bash -c "chmod 777 /srv/jekyll; git config --global --add safe.directory /srv/jekyll; jekyll build"
    - name: Build
      uses: actions/jekyll-build-pages@v1
    - name: deploy via ssh
      run: |
        mkdir -p ${HOME}/.ssh
        echo "${SSH_KEY}" > ${HOME}/.ssh/id_rsa
        echo "${RSYNC_KNOWN_HOSTS}" > ${HOME}/.ssh/known_hosts
        chmod 700 ${HOME}/.ssh
        chmod 600 ${HOME}/.ssh/*
        eval `ssh-agent -s`
        ssh-add ${HOME}/.ssh/id_rsa
        # rsync -avr --delete-after --exclude=.well-known/acme-challenge --delete-excluded _site/ atlantia_marshal@marshal.atlantia.sca.org:marshal.atlantia.sca.org/
        rsync -avr _site/ atlantia_marshal@marshal.atlantia.sca.org:marshal.atlantia.sca.org/
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        RSYNC_KNOWN_HOSTS: ${{ secrets.RSYNC_KNOWN_HOSTS }}
      if: ${{ github.ref == 'refs/heads/master' }}
